@startuml
skinparam componentStyle rectangle
skinparam nodesep 10
skinparam ranksep 20
skinparam defaultTextAlignment center
skinparam linetype ortho

rectangle "Merged Balance-Settlement Layer" {
  component "Core Ledger" as LEDGER {
    [Accounts (CouchDB)]
    [Fungible Tokens (ERC-20)]
    [NFTs (ERC-721)]
    [Transaction Log (Blockchain)]
  }

  component "Transaction Engine" as ENGINE {
    [Atomic Debit/Credit]
    [Real-Time Settlement]
    [Consensus (Raft/BFT)]
  }

  component "API & Services" as API {
    [Payment Initiation (REST/GraphQL)]
    [Consent & KYC (OAuth 2.0)]
    [Info Sharing (GraphQL)]
  }

  component "Security & Interop" as SECURITY {
    [HSM (AWS CloudHSM)]
    [ZK-SNARKs (ZoKrates)]
    [Atomic Swaps (gRPC)]
  }

  component "Public Wallet" as WALLET {
    [React Native/Flutter]
    [Offline NFC]
    [Biometric Auth]
  }

  LEDGER -down-> ENGINE : Balance Updates
  ENGINE -right-> API : Process Transactions
  API -down-> WALLET : Backstop Access
  SECURITY -up-> LEDGER : Secure Keys & Privacy
  SECURITY -left-> ENGINE : Fraud Detection
  SECURITY -down-> API : Encrypted Comms
}

note top of LEDGER
  **Core Ledger**
  - **Accounts**: CouchDB for balances/KYC.
  - **Tokens**: ERC-20 (fungible) and ERC-721 (NFTs).
  - **Transaction Log**: Immutable blockchain.
end note

note right of ENGINE
  **Transaction Engine**
  - Atomic debit/credit.
  - Real-time settlement via Raft/BFT.
  - Consensus finality.
end note

note left of API
  **API & Services**
  - Payment initiation (REST/GraphQL).
  - Consent/KYC (OAuth 2.0).
  - Data sharing (GraphQL).
end note

note right of SECURITY
  **Security & Interop**
  - HSM for root keys.
  - ZK-SNARKs for privacy.
  - Atomic swaps for interoperability.
end note

note left of WALLET
  **Public Wallet**
  - Offline USSD payments.
  - Biometric authentication.
  - Backup access to CBDC.
end note
@enduml